en:
    # NLS_ENCODING=UTF-8

    # agent
    ## test: The next 2 appear when first starting the chat widget.
    prompt: 'Enter message...'
    thinking: 'Agent is thinking...'
    ## test: This is shown after invoking 'list locations' and only getting a single entry in the list (2+ entries show text from the dialog).
    anything_else: 'Is there anything else I can help you with?'

    # general
    edit: 'edit'
    ## test: Currently only used when generating a list of credit cards (see `cc_use_valid`).
    list_sep: ', '

    # errors
    ## test: Init IBMChat with an invalid `baseURL` to see the following.
    reconnect: 'Attempting to reconnect...'
    basic_err: 'I am sorry, I am having difficulties.'
    loading_failure1: '<span class="IBMChat-loading-failure-message-text">I cannot complete your request. You can try a new request or <a class="IBMChat-loading-retry-link" data-retry="true" href="javascript:void(false);">restart the conversation.</a></span>'
    loading_failure2: '<span class="IBMChat-loading-failure-message-text">I cannot complete your request. Please <a class="IBMChat-loading-retry-link" data-retry="true" href="javascript:void(false);">restart the conversation.</a></span>'

    # forms
    ## test: Enter 'update address' and select one of the options. Will display form whose buttons have the submit/cancel text.
    submit: 'Submit'
    cancel: 'Cancel'
    ## test: For same process as above, click the submit button without entering any information. Will see 'required' error.
    required_field: 'This field is required.'

    # dates
    ## test: These are visible in the credit card form (see the "credit cards" section).
    placeholder_mon: 'MM'
    placeholder_year: 'YYYY'

    # credit cards
    ## test: To load credit card form: 1. enter 'pay' 2. enter 'success' 3. click on 'pay now' 4. click on 'credit card'.
    cc_name: 'Name on Card'
    cc_num: 'Credit Card Number'
    cc_exp_mon: 'Expiration Date Month'
    cc_exp_year: 'Expiration Date Year'
    # cc_code: should be short
    cc_code: 'CVV'
    # cc_code_alt: Description of `cc_code`; may appear as tooltip. If empty, value is treated as that of `cc_code`
    cc_code_alt: ''
    # cc_use_valid: Displayed as 'Please use a valid card. We accept the following: American Express, Mastercard, Visa', using `list_sep` to separate list items.
    ## test: Enter '1234' for the credit card number and submit.
    cc_use_valid: 'Please use a valid card. We accept the following: '
    ## test: Enter '4111111111111112' for the credit card number and submit.
    cc_invalid: 'Your credit card number is invalid.'
    ## test: Enter '06' and '1999' for the month/year and submit.
    cc_invalid_exp: 'Your credit card expiration date is invalid.'
    ## test: Enter 'abc' for the CVV and submit.
    cc_invalid_code: 'Your CVV is invalid.'

    # geo
    ## test: Enter 'list locations' to see the next 2 labels.
    loc_curr: 'Current Location'
    postal_code: 'Zip Code'
    ## test: Click on 'current location' button to see the next 2 strings.
    loc_prompt: 'Please share your current location.'
    loc_share: 'Your browser is asking you to share your location...'
    ## test: Allow location sharing in the browser.
    loc_share_granted: 'You have allowed your browser to share your current location.'
    ## test: Rerun the 'list locations' path. This time when selecting 'current location', the user will see this string since browser location access has already been granted.
    loc_looking: 'Looking up your current location...'
    ## test: In a new browser incognito session, rerun 'list locations', select 'current location', but disallow browser location sharing.
    loc_share_denied: 'You have denied sharing your location on this website.'
    loc_not_shared_prompt: 'Please enable location sharing or continue with your Zip Code.'

    # locations
    ## test: The following are used to show the results of 'list locations' command. What is shown depends on the data the user entered in WVA admin, under the 'store location' capability.
    loc_all: 'All Locations'
    loc_closed_today: 'Closed today.'
    loc_open_today: 'Open today.'
    loc_open_today_more: '<span class="{ns}-hours-open">Open today:</span><span class="{ns}-hours-today"> {open, time, short} &ndash; {close, time, short}</span>'
    loc_hours_open: '<span class="{ns}-days-hours-day">{openDay, date, weekday_short}:</span>&nbsp;<span class="{ns}-days-hours-hours">{open, time, short} &ndash; {close, time, short}</span>'
    loc_hours_open_multiday: '<span class="{ns}-days-hours-day">{openDay, date, weekday_short}&ndash;{closeDay, date, weekday_short}:</span>&nbsp;<span class="{ns}-days-hours-hours">{open, time, short} &ndash; {close, time, short}</span>'
    loc_hours_unknown: '<span class="{ns}-days-hours-day">{day, date, weekday_short}:</span>&nbsp;<span class="{ns}-days-hours-hours">Hours unknown</span>'
    loc_hours_closed: '<span class="{ns}-days-hours-day">{day, date, weekday_short}:</span>&nbsp;<span class="{ns}-days-hours-hours">Closed</span>'
    ## test: No locations added to 'store location' capability.
    loc_nearby_none: 'We could not find any locations close to you.'
    ## test: Only one location added to 'store location' capability.
    loc_nearby_single: 'Here are the details for this location:'
    ## test: More than one location added to 'store location' capability.
    loc_nearby_list: 'Here are the locations I found close to you:'
    # Used to generate a URL of form: https://maps.google.com/?q=store%20location
    ## test: Click on address link for location details.
    google_maps_url: 'https://maps.google.com/'
